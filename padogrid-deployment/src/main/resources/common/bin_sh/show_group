#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020,2021 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-group -workspace -short -long -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$WORKSPACE_ARG" != "" ]; then
   WORKSPACE=$WORKSPACE_ARG
else
   WORKSPACE="`basename $PADOGRID_WORKSPACE`"
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Display the status of the specified group of clusters in the specified workspace

SYNOPSIS
   $EXECUTABLE [-group group_name] [-workspace workspace_name] [-short | -long]  [-?]

DESCRIPTION
   Display the status of the specified group of clusters in the specified workspace. If the group name 
   is not specified then it displays the current group. To create a group, run the 'create_group' command.

OPTIONS
   -group group_name
             Group name. If not specified, then it displays the status of the current group.

   -workspace workspace_name
             Workspace name. If not specified, then it displays the group of clusters in the current workspace.

   -short
             Displays running status only.

   -long
             Displays detailed information.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -workspace $WORKSPACE -group default

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*group" $EXECUTABLE
   exit
fi

if [ "$(isValidWorkspace $WORKSPACE)" == "false" ]; then
   echo -e >&2 "${CLightRed}ERROR:${CNone} Specified workspace does not exist: [$WORKSPACE]. Command aborted."
   exit 1
fi

if [ "$GROUP" == "" ]; then
   echo -e >&2 "${CLightRed}ERROR:${CNone} '-group' not specified. Command aborted."
   exit 1
fi

GROUP_DIR="$PADOGRID_WORKSPACES_HOME/$WORKSPACE/groups/$GROUP"
GROUP_FILE="$GROUP_DIR/etc/group.properties"

if [ ! -f "$GROUP_FILE" ]; then
   echo -e >&2 "${CLightRed}ERROR:${CNone} Specified group not found. Run 'create_group' to create one. Command aborted."
   exit 1
fi

CURRENT_DIR="`pwd`"
CURRENT_WORKSPACE="`basename $PADOGRID_WORKSPACE`"
CURRENT_CLUSTER=$CLUSTER

CLUSTER_NAMES=$(getProperty "$GROUP_FILE" "group.cluster.names")

if [ "$CURRENT_WORKSPACE" != "$WORKSPACE" ]; then
   switch_workspace $WORKSPACE
fi

CLUSTER_NAMES=$(echo $CLUSTER_NAMES | sed 's/,/ /g')

# Additional args supplied by the user
if [ "$LONG" == "true" ]; then
   ARGS="-long"
elif [ "$SHORT" == "true" ]; then
   ARGS="-short"
else
   ARGS=""
fi

echo ""
echo -e "           GROUP: ${CLightGreen}$GROUP${CNone}"
echo ""
for i in $CLUSTER_NAMES; do
   show_cluster -cluster $i $ARGS
   echo ""
done

if [ "$CURRENT_WORKSPACE" != "$WORKSPACE" ]; then
   switch_workspace $CURRENT_WORKSPACE
   switch_cluster $CLUSTER
   cd $CURRENT_DIR
fi
