#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020,2021 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-all -group -workspace -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$WORKSPACE_ARG" != "" ]; then
   WORKSPACE=$WORKSPACE_ARG
else
   WORKSPACE="`basename $PADOGRID_WORKSPACE`"
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Stop the specified group of clusters in the specified workspace

SYNOPSIS
   $EXECUTABLE [-group group_name] [-workspace workspace_name] [-all] [-?]

DESCRIPTION
   Stops the specified group of clusters in the specified workspace. If the group name is not specified then
   it starts the 'default' group. To create a group, run the 'create_group' command.

OPTIONS
   -group group_name
             Group name. If not specified, then it stops the 'default' group of clusters.

   -workspace workspace_name
             Workspace name. If not specified, then it stops the group of clusters in the current workspace.
   
   -all
             If specified then stops all running processes that are part of the cluster. For example, if Geode,
             then it stops both members and locators. If Hazelcast, then it stops both members and the management
             center.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -workspace $WORKSPACE -group default

FILES
   $PADOGRID_WORKSPACE/etc/clusters.properties
             The current workspace group file.

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*group" $EXECUTABLE
   exit
fi

CLUSTERS_FILE="$PADOGRID_WORKSPACES_HOME/$WORKSPACE/etc/clusters.properties"

if [ ! -f "$CLUSTERS_FILE" ]; then
   echo -e >&2 "${CLightRed}ERROR:${CNone} No cluster groups found in the workspace. Run 'create_group' to create one. Command aborted."
   exit 1
fi
   

if [ "$GROUP" == "" ]; then
   GROUP="default"
fi

if [ "$GROUP" = "default" ]; then
   GROUP=$(getProperty "$CLUSTERS_FILE" "clusters.group.default")
fi

if [ "$GROUP" == "" ]; then
   echo -e >&2 "${CLightRed}ERROR:${CNone} Default group undefined. Please set the 'clusters.group.default' property in the following file:"
   echo -e >&2 "       $CLUSTERS_FILE"
   echo -e >&2 "       Command aborted."
   exit 1
fi

CURRENT_DIR="`pwd`"
CURRENT_WORKSPACE="`basename $PADOGRID_WORKSPACE`"
CURRENT_CLUSTER=$CLUSTER

CLUSTER_NAMES=$(getProperty "$CLUSTERS_FILE" "clusters.$GROUP.cluster.names")

if [ "$CURRENT_WORKSPACE" != "$WORKSPACE" ]; then
   switch_workspace $WORKSPACE
fi

CLUSTER_NAMES=$(echo $CLUSTER_NAMES | sed 's/,/ /g')

# Additional args supplied by the user
if [ "$ALL" == "true" ]; then
   ARGS="-all"
else
   ARGS=""
fi

echo "Stopping group: [$GROUP]..."
for i in $CLUSTER_NAMES; do
   stop_cluster -cluster $i $ARG
done

if [ "$CURRENT_WORKSPACE" != "$WORKSPACE" ]; then
   switch_workspace $CURRENT_WORKSPACE
   switch_cluster $CLUSTER
   cd $CURRENT_DIR
fi
