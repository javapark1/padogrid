#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020,2021 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-all -port -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Stops Jupyter Notebook

SYNOPSIS
   $EXECUTABLE [-all] [-port port_number] [-?]

NOTES
   Jupyter commands are experimental and subject to change in future releases.

DESCRIPTION
   Stops Jupyter Notebook running in the current RWE.

OPTIONS
   -all
             If specified, then stops all running notebook servers.

   -port [port_number]
             The port the notebook server is listening on. Default: 8888

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -port 8888

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*jupyter* *vscode*" $EXECUTABLE
   exit
fi

if [ "$(which jupyter)" == "" ]; then
   echo >&2 "ERROR: jupyter executable not found. Command aborted."
   exit 1
fi

PORT_NUMBER="$PORT_ARG"
if [ "$PORT_NUMBER" == "" ]; then
   PORT_NUMBER="8888"
fi

echo ""
if [ "$ALL" == "true" ]; then
   JUPYTER_PORTS=$(jupyter notebook list | grep token | sed -e 's/\/\?token.*//' -e 's/.*://')
   JUPYTER_PORTS=$(unique_words "$JUPYTER_PORTS")
   for PORT_NUMBER in $JUPYTER_PORTS; do
      jupyter notebook stop $PORT_NUMBER
      echo "Jupyter notebook server stopped: [$PORT_NUMBER]"
   done
   JUPYTER_PIDS=$(ps -ef | grep jupyter | grep "\-\-no-browser" | grep -v grep | awk '{print $2}')
   JUPYTER_PIDS="$JUYPTER_PIDS $(ps -ef | grep ipykernel_launcher | grep -v grep | awk '{print $2}')"
   JUPYTER_PIDS=$(unique_words "$JUPYTER_PIDS")
   if [ "$JUPYTER_PIDS" != "" ]; then
      kill -9 $JUPYTER_PIDS
   fi
else
   JUPYTER_PIDS=$(ps -ef | grep jupyter | grep "\-\-no-browser" | grep $PORT_NUMBER | grep -v grep | awk '{print $2}')
   JUPYTER_PIDS=$(unique_words "$JUPYTER_PIDS")
   if [ "$JUPYTER_PIDS" != "" ]; then
      kill -9 $JUPYTER_PIDS
   fi
   echo "Jupyter notebook server stopped: [$PORT_NUMBER]"
fi
echo ""

