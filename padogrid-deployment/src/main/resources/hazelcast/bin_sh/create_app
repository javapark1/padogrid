#!/usr/bin/env bash 

# ========================================================================
# Copyright (c) 2020 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-product -app -name -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

PRODUCT_OPTIONS=$(echo "$APP_PRODUCT_LIST" | sed 's/ /|/g')
PRODUCTS_SUPPORTED=$(echo "$APP_PRODUCT_LIST" | sed 's/ /, /g')
THIS_PRODUCT="$(basename $(dirname $SCRIPT_DIR))"
APP_OPTIONS="$(echo $(getAppOptions $THIS_PRODUCT) | sed 's/ /|/g')"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
    $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Create a new app by installing the specified app that is part of the
                 padogrid distribution

SYNOPSIS
   $EXECUTABLE [-product $PRODUCT_OPTIONS]
              [-app app_name]
              [-name new_app_name]
              [-?]

DESCRIPTION
   Creates a new app by installing the specified app that is part of the
   padogrid distribution. This command creates a new app directory in 
   in the following workspace 'apps' directory.

   You are encouraged to create as many apps as you need and configure them
   to work with a specific Hazelcast cluster. By doing so, you minimize
   reconfiguration efforts and your apps and the cluster can be bundled
   together for easier deployment.

OPTIONS
   -product $PRODUCT_OPTIONS
             Product name. Supported products are $PRODUCTS_SUPPORTED.

   -app app_name
             Name of the app to create. Uset <tab><tab> to see available apps. If not 
             specified, then it defaults to 'perf_test' if the specified product is 'hazelcast'
             or 'jet_demo' if the specified product is 'jet'.

   -name new_app_name
             New name of the app. If not specified and the -product option is not specified,
             then it defaults to 'perf_test' if the specified product is 'hazelcast' or 'jet_demo'
             if the specified product is 'jet'. If the '-product' option is not specified, then
             it defaults to 'perf_test' or the specified app_name.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
EOF
if [ "$CLUSTER_TYPE" == "jet" ]; then
cat <<EOF
   $EXECUTABLE -app jet_demo -name jet_demo
EOF
else
cat <<EOF
   $EXECUTABLE -app perf_test -name perf_test
EOF
fi
cat <<EOF

FILES
   $PADOGRID_WORKSPACE/apps
             The current workspace apps directory where all the apps are stored.

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*app*" $EXECUTABLE
   exit
fi

#
# Run the target k8s command if the product is different.
#
PRODUCT="$THIS_PRODUCT"
if [ "$PRODUCT_ARG" != "" ]; then
   if [ "$(containsWord "$APP_PRODUCT_LIST" "$PRODUCT_ARG")" == "false" ]; then
      >&2 echo -e "${CLightRed}ERROR:${CNone} Specified product is not supported: [$PRODUCT_ARG]. Command aborted."
      exit 1
   fi
   if [ "$THIS_PRODUCT" != "$PRODUCT_ARG" ] && [ "$PRODUCT_ARG" != "jet" ]; then
      $PADOGRID_HOME/$PRODUCT_ARG/bin_sh/$EXECUTABLE "$@"
      exit
   fi
   if [ "$PRODUCT_ARG" == "jet" ]; then
      CLUSTER_TYPE="jet"
    else
      CLUSTER_TYPE="imdg"
    fi
else
   # Default product is hazelcast and hence CLUSTER_TYPE is "imdg"
   CLUSTER_TYPE="imdg"
fi

if [ "$APP_SPECIFIED" == "false" ]; then
   if [ "$CLUSTER_TYPE" == "jet" ]; then
      APP="jet_demo"
   else
      APP="perf_test"
   fi
fi
if [ "$NAME_ARG" == "" ]; then
   NAME_ARG=$APP
fi

if [ ! -d "$PADOGRID_HOME/$PRODUCT/apps/$APP" ]; then
   >&2 echo "ERROR: The specified app name does not exist. Command aborted."
   exit 1
fi

# Create apps dir if it does not exist
if [ ! -d "$APPS_DIR" ]; then
   mkdir $APPS_DIR
fi

# Abort if the app dir already exists
APP_DIR="$APPS_DIR/$NAME_ARG"
if [ -d "$APP_DIR" ]; then
   >&2 echo "ERROR: The specified new app name already exists. Command aborted."
   exit 1
fi

# Copy all to the new app dir
cp -r $PADOGRID_HOME/$PRODUCT/apps/$APP $APP_DIR

# Remove version number from src-?
if [ -d "$APP_DIR/src-$HAZELCAST_MAJOR_VERSION_NUMBER" ]; then
   mv "$APP_DIR/src-$HAZELCAST_MAJOR_VERSION_NUMBER" "$APP_DIR/src" 
   rm -r "$APP_DIR/src-"*
fi
if [ -f "$APP_DIR/pom-${HAZELCAST_MAJOR_VERSION_NUMBER}.xml" ]; then
   mv "$APP_DIR/pom-${HAZELCAST_MAJOR_VERSION_NUMBER}.xml" "$APP_DIR/pom.xml" 
   rm -r "$APP_DIR/pom-"*
fi

# Copy versioned config files to the etc/ dir
if [ -d "$APP_DIR/etc/v${HAZELCAST_MAJOR_VERSION_NUMBER}" ]; then
   cp $APP_DIR/etc/v${HAZELCAST_MAJOR_VERSION_NUMBER}/* $APP_DIR/etc/
fi

# Copy template files
if [ "$APP" != "desktop" ] && [ "$APP" != "jet_demo" ]; then
   cp $PADOGRID_HOME/$PRODUCT/etc/template-log4j2.properties $APP_DIR/etc/log4j2.properties
   cp $PADOGRID_HOME/$PRODUCT/etc/template-hibernate.cfg-mysql.xml $APP_DIR/etc/hibernate.cfg-mysql.xml
   cp $PADOGRID_HOME/$PRODUCT/etc/template-hibernate.cfg-postgresql.xml $APP_DIR/etc/hibernate.cfg-postgresql.xml
fi

# Make bin_sh scripts executables
if [ -d "$APP_DIR/bin_sh" ]; then
   chmod 755 $APP_DIR/bin_sh/*
fi

echo "App created as follows."
echo -e "  Product: ${CLightGreen}$CLUSTER_TYPE${CNone}"
echo -e "      App: $APP"
echo -e "     Name: $NAME_ARG"
echo -e "Directory: ${CLightGreen}$APP_DIR${CNone}"
echo ""
